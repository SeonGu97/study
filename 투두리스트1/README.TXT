(21.05.13 ~ 14)
- 본 프로젝트에서 To Do List를 만들다가 text에 공백이 입력이 되어도 요소가 생성이 되는 현상 때문에 어제오늘
무슨 이유 때문인지 검색해보고 혼자 이것저것 만들어봤는데, 아쉽게도 해결을 하지 못했다. 
그래서 네이버 지식인에 물어봐서 trim()이라는 메서드를 알게 되었다. 
trim()은 문자열 양 끝의 공백을 제거하는 역할을 하고 있었다. 이 메서드 하나로 문제가 해결이 되었다. 
정말 편안한 기능이다. 고생을 조금 했지만 그래도 이렇게 고생해서 배우는 게 기억에 오래 남고, 이해가 잘 된다.
그리고 이어서 만들다가 아마도 로컬 부분에서 막히지 않을까 생각한다. 본 프로젝트에서도 조금은 이해를 했지만 
완벽하게 원리나 작동 방법을 이해하지는 못했다. 그래서 마저 만들면서 모르는 것들을 공부해나갈 생각이다.

(21.05.14~15)
- To Do List의 리스트를 만들고 checkbox를 클릭을 했을 때, 리스트의 배경색이 빨간색으로 변하고 중간에 취소서 이
생기도록 만들었다. 그리고, trash(쓰레기통) 버튼을 누르면 요소가 없어지게 만들었다. 전에는 따라만 만들어서 반 밖에
이해를 하지 못했는데, 이번에 한 번 더 복습 겸 더 보안해서 만들어 보니까 이해가 쏙쏙 된다. 모르던 기능들도 알게 되고
알았던 기능들을 좀 더 활용하는 기회가 된 것 같다. 다음은 리스트를 만들었을 때 새로 고침 하거나 웹을 끄고 다시 켰을
때에도 작성했던 리스트가 남아있도록 로컬 부분을 만들면서 이해해 봐야겠다.

(21.05.16)
- To Do List를 추가했을 때, 로컬에도 저장되도록 만들었다. 그리고 trash 버튼을 눌렀을 때, 로컬에서도 삭제되게 했다.
이 부분은 이해를 했다. 로컬에 보낼 땐 객체에서 문자열로 만들어서 보내고, 반대로 받아올 땐 문자열에서 객체로 만들어서
받아야 된다는 걸 알았다. 또 새로 고침을 했을 때, 삭제하지 않고 남겨둔 리스트들은 실제로 남아있도록 만들어야 했다.
조금 헷갈렸지만 그래도 코드를 천천히 읽어보니 이해가 되었다. 또, 이번 로컬 저장소를 만들면서 많은 기능들을 알게
되었다. 정말 To Do List가 겉으로 보기엔 만들기 쉬어 보이지만 막상 만들어보면 많은 기능들이 필요로 했다.
만든 코드들을 한 번 더 훑어보면서 머리에 각인을 시켜야겠다. 다음은 완료한 리스트들만, 완료가 안 된 리스트들만,
모든 리스트들만을 선택해서 볼 수 있도록 만들어 봐야겠다.

(21.05.17)
- 생성된 리스트들을 모두 볼 수 있는 버튼, completed된 리스트만 보는 버튼, uncompleted된 리스트만 보는 버튼,
선택된 리스트들을 모두 삭제하는 버튼을 구현하는 데 어려움을 겪었다. 기존의 코드에서 추가를 하려니까 코드가
꼬여버려서 머리가 새하얘졌다. 그래서 처음부터 차근차근 다시 만들어 봐야겠다...

(21.05.17 ~ 18)
- 생성된 리스트들은 All 버튼을 누르면 모두 선택되고, 한 번 더 누르면 모두 해제가 되는 기능을 만들었다.
그리고 그 기능에 더해서 선택된 리스트들을 한 번에 삭제하는 clear 버튼을 만들었다. 하지만 clear 버튼에서 문제가
생겼다. 리스트를 선택해서 clear 하면 절반만 삭제가 된다는 것이었다. 예를 들어 10개의 리스트를 생성해서 10개를 선택
했다고 한다면 clear를 눌렀을 때 5개만 지워진다. 몇 개를 생성하고 몇 개를 선택하던 절반 정도만 삭제가 됐다. 정말
이 문제 때문에 몇 시간 동안 고치려고 헤매다가 결국 혼자 해결을 했다. 리스트 요소를 모두 선택할 수 있는 for 문을
만들어서 리스트의 length 만큼 마지노선을 두었다. 이때 리스트를 삭제를 하면 length는 줄어들고, length 만큼 반복해서
커지는 변수 i는 계속 커져서 삭제가 되는 중, 중간에 두 값이 똑같지 거나 i가 커져서 반만 삭제가 된 것이다. 그래서 삼 항
조건 연산자를 걸어서 변수 i 와 length가 같아지면 i 값을 -1으로 초기화 시켰다. 그렇게 하니까 정상적으로 작동이
됐다. 리스트를 삭제하면 i 값이 -1 되고, i는 ++가 되기 때문에 i는 0을 유지한다. 그러면 모든 리스트들을 선택할 수 있
게 된다. 다음은 미리 발견해둔 문제가 있는데 바로 All 버튼이다. All 버튼은 극단적으로 리스트가 모두 선택, 모두 해체가
되도록 만들었는데, 문제는 내가 특정 리스트를 선택하거나, 해체하면 그 리스트도 All 버튼을 누름에 따라 바뀐다는 것
이다. 다음은 이 문제를 해결해 봐야겠다. 확실히 한번 따라만들어 보고, 다시 혼자 만들어보면 나만의 유연한 코드로
짤 수 있고, 문제점들을 발견해서 극복하면 그 순간 실력이 늘어난다는 장점이 있다. 반대로 단점은 엄청난 시간이
걸릴 수도 있다는 것이다. 그래도 문제를 해결해서 너무 뿌듯하다.

(21.05.18 ~ 19)
- 생성된 리스트들을 모두 선택하고, 모두 해제하고, 부분선택이 되있다면 모두선택이 되는 버튼을 구현했다.
오늘도 시간이 많이 걸렸다. 처음엔 for문으로 만들었는데, 리스트선택을 하면 체크된 리스트는 해체되고 해체된 리스트는
체크가 되는 원하지 않았던 결과가 나왔다. 그래서 해결 방법을 모색하는 중..! foreach메서드를 사용하게 되었다.
foreach메서드의 존재는 알고있었지만, 정확한 기능을 몰랐었고, 사용을 해본적이 없었다. 이 기능을 써보게 되면서
이 기능의 편리함을 알게되었다. 작성한 함수가 모든 배열의 각각에 적용이 되서 for문을 쓰지 않아도 됬고, 더 깔끔하게
적용이 됬다. 중간에 for문과 foreach메서드를 같이 쓰는 바람에 조금에 버그가 있었지만 for문이 잘못 된걸 알고, 삭제를
하고 foreach메서드만을 사용했다. 오늘도 몰랐던 기능들을 알게되고, 실력이 한층더 높아진 것 같다. 내일은 나머지
all버튼, completed버튼, uncompleted버튼을 구현 해봐야겠다.

(21.05.20)
- All 버튼을 누를때 체크된 상태면, 리스트의 배경색이 붉은색으로 바뀌고 텍스트 중간에 취소선과 텍스트의 색이 바뀌도록
만들었다. 리스트가 체크된 상태에서 All버튼을 한번더 누르면 체크가 해제 되면서 배경색과 텍스트가 원상복구된다.
그리고 직접적으로 클릭을 하면 체크, 체크해제가 될때도, 배경색과, 텍스트가 바뀌도록 만들었다. 이번 작업은 간단해서
금방 해결을 한 것 같다.

(21.05.22) 
- 하단의 all, completed, uncompleted 버튼을 눌렀을때 리스트의 display를 재정의 했다.
all버튼을 누르면 모든 리스트들은 dispaly = flex가 된다. completed버튼을 누르면 체크된, 리스트들만 flex되고, 미완료 된
리스트들은 none이된다. uncompleted버튼을 누르면 미완료 된 리스트들은 flex되고, 완료된 리스트들은 none이된다.
여기서 고쳐야할 부분이 몇개 있는데, 첫번째는 completed나 uncompleted버튼을 눌렀을때, 이미 생성된 리스트들은
변동이 잘 되지만, completed버튼을 눌렀을때, 완료 된 리스트만 보여야 하는데, 실제로 리스트를 생성하면 추가가 된다.
그래서 completed 상태일땐 생성 리스트가 자동으로 none이 되도록 해야된다. 그리고 uncompleted버튼을 눌렀을때,
미완료 된 리스트들만 보이지만 클릭을해서 completed가 되면 none되어야 하는데 되지 않는다.
그리고, uncompleted버튼을 눌렀을때, clear를 누르면 none된 completed리스트들이 삭제가 된다는 것 이다.
또, 하단 맨 왼쪽에 생성된 리스트의 개수를 표시하도록 했는데, 생성을하거나 삭제를 하면 잘 변동이 되지만, 직접 클릭을
하면 변화가 없다. 그리고 completed, uncompleted 버튼을 눌렀을때, none된 리스트까지도 length에 포함이 되어서
이것도 고쳐야한다. 총 4개의 미완료된 부분이 있다. 다음은 이 기능을 모두 완성 시켜야 겠다.

(21.05.24)
- completed 버튼을 누르면 완료된 리스트들은 display = none이 되고, select all 버튼을 눌렀을떄도,  완료된 리스트들만
보여지고, 반대로 uncompleted버튼을 눌렀을땐 미완료된 리스트들만 보여지도록 만들었다. 이때 문제점이 있는데,
직접 체크를 했들때 타켓이 요소 전체라서 체크박스만을 온전히 클릭하면 정상 작동하지만 감싸고 있는 부모들을 눌러도
이벤트가 적용이 된다는 것이다. 이를 수정하면 completed, uncompleted 버튼은 완성 될 것 같다.

(21.05.25)
- 어제의 completed, uncompleted 버튼의 문제점은 해결이 됐다. 체크박스의 체크 이벤트의 타켓이 리스트들을 담는
부모요소 이기 때문에 체크박스를 포함한 부모요소들을 클릭해도 이벤트가 적용이 됐다. 그래서 이 문제를 체크박스를
클릭 해야지만 이벤트가 적용 되도록 추가를 했다. 그래서 completed버튼을 눌렀을땐 완료된 리스트들만 보여지고 직접
눌러서 체크를 해제하면 display = none이 된다. 그리고 select all버튼을 눌렀을때도 completed만 보여진다.
반대로 uncompleted버튼도 같다. 코드를 반대로 수정만 하면돼서 복붙하면 됐다. 다음은 생성된 리스트들의 갯수를 볼 수
있도록 버튼 왼쪽에 만들어져있다. 하지만 클릭을 했들때 리스트가 체크되면 갯수가 줄어들고 체크가 해제되면 다시 늘어
나야 되는데 아직 구현을 하지 못 했다. 다음은 리스트의 갯수를 직접적으로 확인 할 수 있는 부분을 완성을 해야겠다.

(21.05.25)
- all버튼의 문제점을 발견해서 수정을 했다. all버튼을 누르고, select all버튼을 누르면 체크표시만 토글이 되어야 하는데,
리스트의 display가 체크되면 none이 됬다. 그래서 간단하게 compelted, uncompleted에 적용한것처럼 Allselect버튼을
눌렀을때 계속 display = flex가 유지 되도록 만들었다. 그래서 해결이 됬다.

(21.05.25 ~ 26)
- 오늘은 처음 화면이나, all버튼을 눌러서 모든 리스트들이 보이는 상태에서 리스트를 체크하면 개수가 보여지는 부분에서
실제로 줄어들고, 다시 해제하면 개수가 원상복구 되는 코드를 완성했다. 하지만 select all버튼을 누르면 개수가 변동이 되지
않았다. 이문제는 completed, uncompleted버튼을 눌렀을때 같은 문제가 발생됐다. 이부분은 다음에 고쳐야 겠다.
또, 리스트의 trash(쓰레기)버튼을 작동할수 있도록 했다. 전에 만들었을땐 trash(쓰레기)버튼은 체크가 되었던 안되었던
누르면 리스트가 삭제가 됬는데 이부분을 조금 수정해서 구현했다. 오로지 체크가 된 리스트만 쓰레기 버튼이 작동이 되도록
만들었다. 이부분에서 조금 생각대로 안돼서 시간이 걸렸지만, 천천히 생각을 가다듬고 만들어서 해보니 됬다. 그래서
오늘은 trash(쓰레기)버튼과 모든 리스트가 보여질때 체크/ 체크해제 하면 개수가 변동이 되는, 이 2개의 기능을 추가했다.
그래도 이제는 '이 기능을 구현해야지' 라고 생각하면 어떻게 만들어야 할지 금방 떠오른다. 적어도 내가 무엇을 구상해서
만들고 어떻게 만들어야할지 또, 무엇이 안되는지를 아는 것 같다.

(21.05.31)
- select all 버튼을 눌렀을때, 리스트들이 전체 체크/해제 됨에 따라서 length의 변화가 없었다. 그래서 모두 체크가 되면
생성된 리스트들이 completed 되기 때문에 0이 입력 되도록 하고, 전체 체크해제가 되면, 생성된 리스트들의 개수 만큼
입력이 되도록 했다. 다음은 로컬 스토리지를 만들어야 겠다.

(21.06.01)
- 리스트를 생성 할 때 마다 리스트의 value를 로컬스토리지에도 똑같이 문자열이 저장되도록 만들었다.
하지만 내가 리스트에 입력한 텍스트가 로컬에 똑같이 저장만 될 뿐, 실제로 그 리스트들의 외형이 유지되지는 않았다.
그래서 로컬에 저장이 되면 그 문자열 하나하나에 forEach를 사용해서 요소를 만들어줬다. 그랬더니 내가 만들 리스트들이
새로고침을 하거나 웹을 껐다 켜도 유지가됬다. 다음은 로컬을 삭제하고, 요소도 같이 삭제 되도록 만들어야겠다.

(21.06.02)
- 리스트가 생성이되고, 로컬에 저장이 돼서 그 리스트를 삭제를 하고자 할때, trash(쓰레기) 버튼을 누르면 선택된 리스트
삭제와 동시에 로컬에서도 지워지게 만들었다. 또 추가로 리스트 모두가 선택이되던, 몇개의 리스트가 선택이 되던
clear버튼을 눌렀을때에도 만들어진 리스트가 삭제되고, 로컬에서도 지워지도록 만들었다.
이제 리스트를 지우는 기능은 완성이 된 것 같다. 만들면서 조금 이해가 되지 않는 부분이 있어서 천천히 다시 코드를
살펴 보아야 겠다. 다음은 내가 체크 해두었던 리스트가 새로고침이나 웹을 껏다가 다시 켰을때에도 유지가 되어 있도록
만들어 봐야겠다. 만드는 법을 조금 찾아 보기는 했는데, 로컬을 이용하거나, 쿠키를 사용해야 됬다. 아마도 기존의 리스트
를 새로고침이나 웹을 껏다 켰을때 유지 하는 것은 조금 생각을 하면 됬었는데, 체크박스를 유지하는 부분을 만드는데에
생각이 많이 복잡할 것 같다. 

(21.06.04)
- clear버튼 눌렀을때 로컬스토리지 삭제 오류 수정

(21.06.05)
- 웹을 껏다키거나 새로고침 했을때, 체크박스가 체크,해제 되있는 부분이 유지가 되도록 만들어야 했다.
근데 아직 만들지 못했다. 어떻게 만들지는 생각이 되어도 막상 코드로 짜지지가 않았다. 그래서 이부분은 시간이 좀 걸릴
것 같다. 로컬 스토리지를 새로 하나 생성한뒤 그곳에 리스트의 체크 여부를 넣어서 그거에 따른 상태 유지를 할려고 했는데
생각처럼 되지 않는다. 여러 기능들을 넣으려니까 코드가 방대해지고, 만들기 복잡해진다. 그래도 계속 만들어 봐야겠다.

(21.06.07)
- 체크박스의 상태 유지를 만들려고 했으나 생각보다 난이도가 높아서 만들지 못했다.
특정 리스트를 선택하면 로컬에 체크상태가 저장이되고, 체크가 되면 true가 로컬에 저장이 되도록 하고, 체크가 풀리면
false가 저장이 되도록 만들려고 했지만, 특정 리스트를 선택하면 그 특정 리스트의 순서에 맞는 로컬의 값을 변경해야 하고,
체크의 상태를 유지 하기위해 로컬에 저장된 값에 따라 실제 체크박스가 변경 되야한다. 는 부분이 너무 복잡했다.
내일 다시 처음부터 차근차근 천천히 생각해서 만들어 봐야 겠다.

(21.06.08)
- 웹을 새로고침 하거나 껐다가 켰을때, 체크박스의 상태가 유지 되도록 만들었다. 하지만 체크박스의 체크여부가 들어있는
로컬 스토리지가 동작만할뿐, 실제로 리스트를 삭제할때 같이 삭제가 안되서 오류가 있다. 이 문제는 기존 trash버튼이
작성 되어 있는 함수에 추가를 하면 될 것 같다. 내일은 이부분을 추가 해야겠다.

(21.06.09)
- 웹을 새로고침 하거나 껐다가 켰을때에도 체크박스의 상태가 유지되고, 실제로 삭제 버튼을 누르면 리스트 삭제와 동시에
로컬스토리지에서도 삭제가 된다. 그리고 clear, select all 버튼을 눌렀을 때에도 체크박스 상태 유지와 삭제 기능이
정상 작동 하였다. todolist의 99%는 완성이 된 것 같다. 내일은 조금 스타일을 꾸미고, 지금 만드는 것이 2번째 이지만,
사실 조금 더 효율적인 코드를 짜서 코드의 양을 줄이고, 좀더 간단하게 만들어 보고 싶다. 그래서 한번더 복습의 복습 겸
또 만들어 볼 생각이다.
 